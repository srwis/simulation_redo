iterates   = 1;

/* 
   how many iterates should be generated,
   they will be saved into the directory chosen by the user at the prompt and 
   end with extensions .0, .1, ..., .iterates-1
*/

DATA_FILE_PRINT_FORMAT = 4;

/* what format the output should be saved as:

1. DATA_FILE_PRINT_FORMAT = 0:
   -- FASTA sequential;
2. DATA_FILE_PRINT_FORMAT = 1:
   -- FASTA interleaved;
3. DATA_FILE_PRINT_FORMAT = 2: 
   -- PHYLIP sequential;
4. DATA_FILE_PRINT_FORMAT = 3: 
   -- PHYLIP interleaved.
5. DATA_FILE_PRINT_FORMAT = 4:
  -- NEXUS sequential with sequence labels in the matrix;
6. DATA_FILE_PRINT_FORMAT = 5: 
  -- NEXUS interleaved with sequence labels in the matrix;
7. DATA_FILE_PRINT_FORMAT = 6:
  -- NEXUS sequential without sequence labels in the matrix;
8. DATA_FILE_PRINT_FORMAT = 7: 
  -- NEXUS interleaved without sequence labels in the matrix;
9. DATA_FILE_PRINT_FORMAT = 8;
  -- comma separated character data
  */ 


				
observedFreq = {	 /* 1st codon pos*/ /* 2nd codon pos*/ /* 3rd codon pos*/
	/*A*/		{    0.355885780886,    0.377738927739,     0.47027972028} 
	/*C*/		{    0.188053613054,    0.197494172494,    0.115617715618}
	/*G*/		{    0.292657342657,    0.152097902098,    0.194230769231}
	/*T*/		{    0.163403263403,    0.272668997669,    0.219871794872}
				};

/* position equilibrium frequencies for PAML style F3x4 estimator
   edit the numbers as needed.
   Make sure to preserve the matrix syntax */

			

geneticCodeID		= 0; 

/* modify the genetic code as needed by setting geneticCodeID to the appropriate index 

0	"Universal","Universal code. (Genebank transl_table=1).",
1	"Vertebrate mtDNA","Vertebrate mitochondrial DNA code. (Genebank transl_table=2).",
2	"Yeast mtDNA","Yeast mitochondrial DNA code. (Genebank transl_table=3).",
3	"Mold/Protozoan mtDNA","Mold, Protozoan and Coelenterate mitochondrial DNA and the Mycloplasma/Spiroplasma code. (Genebank transl_table=4).",
4	"Invertebrate mtDNA","Invertebrate mitochondrial DNA code. (Genebank transl_table=5).",
5	"Ciliate Nuclear","Ciliate, Dasycladacean and Hexamita Nuclear code. (Genebank transl_table=6).",
6	"Echinoderm mtDNA","Echinoderm mitochondrial DNA code. (Genebank transl_table=9).",
7	"Euplotid Nuclear","Euplotid Nuclear code. (Genebank transl_table=10).",
8	"Alt. Yeast Nuclear","Alternative Yeast Nuclear code. (Genebank transl_table=12).",
9	"Ascidian mtDNA","Ascidian mitochondrial DNA code. (Genebank transl_table=13).",
10	"Flatworm mtDNA","Flatworm mitochondrial DNA code. (Genebank transl_table=14).",
11	"Blepharisma Nuclear","Blepharisma Nuclear code. (Genebank transl_table=15).");	
	
*/


/* DO NOT EDIT THE LINES BELOW */
/* ------------------------------------------------------------ */

skipCodeSelectionStep = 1;

incFileName = HYPHY_BASE_DIRECTORY+"TemplateBatchFiles"+DIRECTORY_SEPARATOR+"TemplateModels"+DIRECTORY_SEPARATOR+"chooseGeneticCode.def";
ExecuteCommands  ("#include \""+incFileName+"\";");

ApplyGeneticCodeTable (0); /*use universal code*/

SKIP_MODEL_PARAMETER_LIST = 1;
SKIP_HARVEST_FREQ		  = 1;
modelType				  = 1;
modelDesc  				  = "010010";

incFileName = HYPHY_BASE_DIRECTORY+"TemplateBatchFiles"+DIRECTORY_SEPARATOR+"TemplateModels"+DIRECTORY_SEPARATOR+"MG94custom.mdl";
ExecuteCommands  ("#include \""+incFileName+"\";");
	   	   
SKIP_MODEL_PARAMETER_LIST = 0;
SKIP_HARVEST_FREQ		  = 0;

/* ------------------------------------------------------------ */
/* END OF DO NOT EDIT */



AC = 0.25;
AT = 0.25;
CG = 0.25;
CT = 1.0;
GT = 0.25;
/* modify nucleotide biases as needed; all are defined RELATIVE to AG*/ 

seqs 		= 		5;

/* how many sequences; ignored if treeType = 3 */

treeType = 1; 
	    
/* 0 - symmetric, 
   1 - random,  
   2-  ladder, 
   3 - employ treeString defined in this file */
   
treeString = "((1:0.05,2:0.04):0.03,3:0.1,4:0.1)";

/* set this tree, including branch lengths (assuming dS=dN=1) for treetype 3 */

branchLength = 		0.05; 

/* 
	mean branch length in expected subs/nuc.site foir treeType = 0, 1 or 2
    branche lengths are drawn from an exponential with this mean 
*/

omegas = 		
{
{1.0, 2.0, 0.5}
{2500, 1250, 1250}
{0.2, 1.0, 5.0}
};

/* the matrix above defines what dS and dN should be used for simulation 
   row 1: dS to use (always 1 for the first partition, and relative to 1st partition for the rest)
   row 2: how many codons in each partition
   row 3: dN/dS for this partition
   
   e.g. 
   
   omegas = 		
	{
	{1.0, 2.0, 0.5}
	{200, 100, 50}
	{0.2, 1.0, 5.0}
	};

	will simulate 200 codons with dS = 1, dN/dS = 0.2,
		          100 codons with dS = 2, dN/dS = 1.0,
		          50  codons with dS = 0.5, dN/dS = 5.0.
*/
	